package org.example.core.model

import org.example.core.style.Modifier

abstract class BodyTag(name: String) : TagWithText(name) {
    fun b(init: B.() -> Unit) = initTag(B(), init)
    fun p(init: P.() -> Unit) = initTag(P(), init)
    fun h1(init: H1.() -> Unit) = initTag(H1(), init)
    fun h2(init: H2.() -> Unit) = initTag(H2(), init)
    fun h3(init: H3.() -> Unit) = initTag(H3(), init)
    fun h4(init: H4.() -> Unit) = initTag(H4(), init)
    fun h5(init: H5.() -> Unit) = initTag(H5(), init)
    fun h6(init: H6.() -> Unit) = initTag(H6(), init)
    fun header(init: Header.() -> Unit) = initTag(Header(), init)
    fun a(modifier: Modifier = Modifier.Default, href: String, init: A.() -> Unit) {
        val a = initTag(A(), init)
        a.href = href
        a.applyModifier(modifier)
    }
    fun abbr(init: Abbr.() -> Unit) {
        val abbr = initTag(Abbr(), init)
    }

    fun acronym(init: Acronym.() -> Unit) = initTag(Acronym(), init)

    fun address(init: Address.() -> Unit) = initTag(Address(), init)
    fun applet(init: Applet.() -> Unit) = initTag(Applet(), init)
    fun area(init: Area.() -> Unit) = initTag(Area(), init)
    fun article(init: Article.() -> Unit) = initTag(Article(), init)
    fun aside(init: Aside.() -> Unit) = initTag(Aside(), init)
    fun audio(init: Audio.() -> Unit) = initTag(Audio(), init)
    fun bdi(init: Bdi.() -> Unit) = initTag(Bdi(), init)
    fun bdo(init: Bdo.() -> Unit) = initTag(Bdo(), init)
    fun big(init: Big.() -> Unit) = initTag(Big(), init)
    fun blink(init: Blink.() -> Unit) = initTag(Blink(), init)
    fun blockquote(init: BlockQuote.() -> Unit) = initTag(BlockQuote(), init)
    fun br(init: Br.() -> Unit) = initTag(Br(), init)
    fun button(init: Button.() -> Unit) = initTag(Button(), init)
    fun canvas(init: Canvas.() -> Unit) = initTag(Canvas(), init)
    fun caption(init: Caption.() -> Unit) = initTag(Caption(), init)
    fun center(init: Center.() -> Unit) = initTag(Center(), init)
    fun cite(init: Cite.() -> Unit) = initTag(Cite(), init)
    fun code(init: Code.() -> Unit) = initTag(Code(), init)
    fun col(init: Col.() -> Unit) = initTag(Col(), init)
    fun colgroup(init: ColGroup.() -> Unit) = initTag(ColGroup(), init)
    fun command(init: Command.() -> Unit) = initTag(Command(), init)
    fun comment(init: Comment.() -> Unit) = initTag(Comment(), init)
    fun datalist(init: DataList.() -> Unit) = initTag(DataList(), init)
    fun dd(init: DD.() -> Unit) = initTag(DD(), init)
    fun del(init: Del.() -> Unit) = initTag(Del(), init)
    fun details(init: Details.() -> Unit) = initTag(Details(), init)
    fun dfn(init: Dfn.() -> Unit) = initTag(Dfn(), init)
    fun dir(init: Dir.() -> Unit) = initTag(Dir(), init)
    fun div(init: Div.() -> Unit) = initTag(Div(), init)
    fun dl(init: Dl.() -> Unit) = initTag(Dl(), init)
    fun dt(init: Dt.() -> Unit) = initTag(Dt(), init)
    fun em(init: Em.() -> Unit) = initTag(Em(), init)
    fun embed(init: Embed.() -> Unit) = initTag(Embed(), init)
    fun fieldset(init: FieldSet.() -> Unit) = initTag(FieldSet(), init)
    fun figcaption(init: FigCaption.() -> Unit) = initTag(FigCaption(), init)
    fun figure(init: figure.() -> Unit) = initTag(figure(), init)
    fun font(init: Font.() -> Unit) = initTag(Font(), init)
    fun footer(init: Footer.() -> Unit) = initTag(Footer(), init)
    fun form(init: Form.() -> Unit) = initTag(Form(), init)
    fun frame(init: Frame.() -> Unit) = initTag(Frame(), init)
    fun frameset(init: FrameSet.() -> Unit) = initTag(FrameSet(), init)
    fun hgroup(init: HGroup.() -> Unit) = initTag(HGroup(), init)
    fun hr(init: Hr.() -> Unit) = initTag(Hr(), init)
    fun i(init: I.() -> Unit) = initTag(I(), init)
    fun iframe(init: IFrame.() -> Unit) = initTag(IFrame(), init)
    fun img(init: Img.() -> Unit) = initTag(Img(), init)
    fun input(init: Input.() -> Unit) = initTag(Input(), init)
    fun ins(init: Ins.() -> Unit) = initTag(Ins(), init)
    fun isindex(init: IsIndex.() -> Unit) = initTag(IsIndex(), init)
    fun kbd(init: KBD.() -> Unit) = initTag(KBD(), init)
    fun keygen(init: KeyGen.() -> Unit) = initTag(KeyGen(), init)
    fun label(init: Label.() -> Unit) = initTag(Label(), init)
    fun legend(init: Legend.() -> Unit) = initTag(Legend(), init)
    fun li(init: Li.() -> Unit) = initTag(Li(), init)
    fun link(init: Link.() -> Unit) = initTag(Link(), init)
    fun listing(init: Listing.() -> Unit) = initTag(Listing(), init)
    fun main(init: Main.() -> Unit) = initTag(Main(), init)
    fun map(init: Map.() -> Unit) = initTag(Map(), init)
    fun mark(init: Mark.() -> Unit) = initTag(Mark(), init)
    fun marquee(init: Marquee.() -> Unit) = initTag(Marquee(), init)
    fun menu(init: Menu.() -> Unit) = initTag(Menu(), init)
    fun meta(init: Meta.() -> Unit) = initTag(Meta(), init)
    fun meter(init: Meter.() -> Unit) = initTag(Meter(), init)
    fun multicoil(init: MultiCoil.() -> Unit) = initTag(MultiCoil(), init)
    fun nav(init: Nav.() -> Unit) = initTag(Nav(), init)
    fun nobr(init: Nobr.() -> Unit) = initTag(Nobr(), init)
    fun noembed(init: Noembed.() -> Unit) = initTag(Noembed(), init)
    fun noframes(init: NoFrames.() -> Unit) = initTag(NoFrames(), init)
    fun noscript(init: NoScript.() -> Unit) = initTag(NoScript(), init)
    fun object_(init: Object.() -> Unit) = initTag(Object(), init)
    fun ol(init: Ol.() -> Unit) = initTag(Ol(), init)
    fun optgroup(init: OptGroup.() -> Unit) = initTag(OptGroup(), init)
    fun option(init: Option.() -> Unit) = initTag(Option(), init)
    fun output(init: Output.() -> Unit) = initTag(Output(), init)
    fun param(init: Param.() -> Unit) = initTag(Param(), init)
    fun plaintext(init: PlainText.() -> Unit) = initTag(PlainText(), init)
    fun pre(init: Pre.() -> Unit) = initTag(Pre(), init)
    fun progress(init: Progress.() -> Unit) = initTag(Progress(), init)
    fun q(init: Q.() -> Unit) = initTag(Q(), init)
    fun rp(init: RP.() -> Unit) = initTag(RP(), init)
    fun rt(init: RT.() -> Unit) = initTag(RT(), init)
    fun ruby(init: Ruby.() -> Unit) = initTag(Ruby(), init)
    fun s(init: S.() -> Unit) = initTag(S(), init)
    fun samp(init: Samp.() -> Unit) = initTag(Samp(), init)
    fun script(init: Script.() -> Unit) = initTag(Script(), init)
    fun section(init: Section.() -> Unit) = initTag(Section(), init)
    fun select(init: Select.() -> Unit) = initTag(Select(), init)
    fun small(init: Small.() -> Unit) = initTag(Small(), init)
    fun source(init: Source.() -> Unit) = initTag(Source(), init)
    fun spacer(init: Spacer.() -> Unit) = initTag(Spacer(), init)
    fun span(init: Span.() -> Unit) = initTag(Span(), init)
    fun strike(init: Strike.() -> Unit) = initTag(Strike(), init)
    fun strong(init: Strong.() -> Unit) = initTag(Strong(), init)
    fun style(init: Style.() -> Unit) = initTag(Style(), init)
    fun sub(init: Sub.() -> Unit) = initTag(Sub(), init)
    fun summary(init: Summary.() -> Unit) = initTag(Summary(), init)
    fun sup(init: Sup.() -> Unit) = initTag(Sup(), init)
    fun table(init: Table.() -> Unit) = initTag(Table(), init)
    fun tbody(init: TBody.() -> Unit) = initTag(TBody(), init)
    fun td(init: Td.() -> Unit) = initTag(Td(), init)
    fun textarea(init: TextArea.() -> Unit) = initTag(TextArea(), init)
    fun tfoot(init: TFoot.() -> Unit) = initTag(TFoot(), init)
    fun th(init: Th.() -> Unit) = initTag(Th(), init)
    fun thead(init: THead.() -> Unit) = initTag(THead(), init)
    fun time(init: Time.() -> Unit) = initTag(Time(), init)
    fun tr(init: Tr.() -> Unit) = initTag(Tr(), init)
    fun track(init: Track.() -> Unit) = initTag(Track(), init)
    fun tt(init: TT.() -> Unit) = initTag(TT(), init)
    fun u(init: U.() -> Unit) = initTag(U(), init)
    fun ul(init: UL.() -> Unit) = initTag(UL(), init)
    fun var_(init: Var.() -> Unit) = initTag(Var(), init)
    fun video(init: Video.() -> Unit) = initTag(Video(), init)
    fun wbr(init: WBR.() -> Unit) = initTag(WBR(), init)
    fun xmp(init: XMP.() -> Unit) = initTag(XMP(), init)
    fun base(init: Base.() -> Unit) = initTag(Base(), init)
    fun basefont(init: BaseFont.() -> Unit) = initTag(BaseFont(), init)

}